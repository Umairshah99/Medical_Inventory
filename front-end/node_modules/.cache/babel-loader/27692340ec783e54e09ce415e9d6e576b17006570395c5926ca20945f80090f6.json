{"ast":null,"code":"var _jsxFileName = \"/Users/ayeshazafar/Desktop/Medical_Inventory-main/front-end/src/Pages/Inventory.jsx\";\nimport React, { Component } from \"react\";\nimport InventoryCard from \"../Components/InventoryCard\";\nimport axios from \"axios\";\nimport Moment from \"react-moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar moment = require(\"moment\");\nlet count = 0;\nclass Inventory extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: [],\n      inventory: [],\n      response: {}\n    };\n  }\n  async componentDidMount() {\n    const jwtToken = localStorage.getItem(\"token\");\n    if (!jwtToken) {\n      window.location.replace(\"/\");\n    }\n    const res = await axios.get(`${process.env.REACT_APP_URL}/getInventory`, {\n      headers: {\n        Authorization: `JWT ${jwtToken}`\n      }\n    });\n    this.setState({\n      data: res.data\n    });\n    let inventory_set = [...new Set(this.state.data.map(item => item.name))];\n    this.setState({\n      inventory: inventory_set\n    });\n  }\n  async componentDidUpdate(prevState) {\n    if (prevState.data !== this.state.data) {\n      //   const jwtToken = localStorage.getItem(\"token\");\n      //   if (!jwtToken) {\n      //     window.location.replace(\"/\");\n      //   }\n      //   const res = await axios.get(`${process.env.REACT_APP_URL}/getInventory`, {\n      //     headers: { Authorization: `JWT ${jwtToken}` },\n      //   });\n      //   this.setState({ data: res.data });\n      //   let inventory_set = [\n      //     ...new Set(this.state.data.map((item) => item.name)),\n      //   ];\n      //   this.setState({ inventory: inventory_set });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-fixed\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Qty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Exp_date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: this.state.inventory.map((name, key) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), this.state.data.map(item => {\n              count += item.quantity;\n              return name == item.name ? /*#__PURE__*/_jsxDEV(InventoryCard, {\n                name: item.name,\n                qty: item.quantity,\n                price: item.price_unit,\n                exp_date: moment(item.exp_date).format(\"YYYY-MM-DD\"),\n                color: moment(item.exp_date).format(\"YYYY-MM-DD\") < moment().format(\"YYYY-MM-DD\") ? \"red\" : \"black\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 23\n              }, this) :\n              /*#__PURE__*/\n              //   <div>ALERT<div/>\n              _jsxDEV(_Fragment, {}, void 0, false);\n            }), \" \"]\n          }, void 0, true);\n        }\n        // console.log(\"Name: \", name, \"Qty: \", count);\n        // count = 0;\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Inventory;","map":{"version":3,"names":["React","Component","InventoryCard","axios","Moment","moment","require","count","Inventory","state","data","inventory","response","componentDidMount","jwtToken","localStorage","getItem","window","location","replace","res","get","process","env","REACT_APP_URL","headers","Authorization","setState","inventory_set","Set","map","item","name","componentDidUpdate","prevState","render","key","quantity","price_unit","exp_date","format"],"sources":["/Users/ayeshazafar/Desktop/Medical_Inventory-main/front-end/src/Pages/Inventory.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport InventoryCard from \"../Components/InventoryCard\";\nimport axios from \"axios\";\nimport Moment from \"react-moment\";\n\nvar moment = require(\"moment\");\nlet count = 0;\nclass Inventory extends Component {\n  // const Inventory = () => {\n  state = {\n    data: [],\n    inventory: [],\n    response: {},\n  };\n  async componentDidMount() {\n    const jwtToken = localStorage.getItem(\"token\");\n    if (!jwtToken) {\n      window.location.replace(\"/\");\n    }\n    const res = await axios.get(`${process.env.REACT_APP_URL}/getInventory`, {\n      headers: { Authorization: `JWT ${jwtToken}` },\n    });\n    this.setState({ data: res.data });\n    let inventory_set = [...new Set(this.state.data.map((item) => item.name))];\n    this.setState({ inventory: inventory_set });\n  }\n\n  async componentDidUpdate(prevState) {\n    if (prevState.data !== this.state.data) {\n      //   const jwtToken = localStorage.getItem(\"token\");\n      //   if (!jwtToken) {\n      //     window.location.replace(\"/\");\n      //   }\n      //   const res = await axios.get(`${process.env.REACT_APP_URL}/getInventory`, {\n      //     headers: { Authorization: `JWT ${jwtToken}` },\n      //   });\n      //   this.setState({ data: res.data });\n      //   let inventory_set = [\n      //     ...new Set(this.state.data.map((item) => item.name)),\n      //   ];\n      //   this.setState({ inventory: inventory_set });\n    }\n  }\n\n  render() {\n    return (\n      <table className=\"table-fixed\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Qty</th>\n            <th>Price</th>\n            <th>Exp_date</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.state.inventory.map(\n            (name, key) => {\n              return (\n                <>\n                <></>\n                  {this.state.data.map((item) => {\n                    count += item.quantity;\n\n                    return name == item.name ? (\n                      <InventoryCard\n                        name={item.name}\n                        qty={item.quantity}\n                        price={item.price_unit}\n                        exp_date={moment(item.exp_date).format(\"YYYY-MM-DD\")}\n                        color={\n                          moment(item.exp_date).format(\"YYYY-MM-DD\") <\n                          moment().format(\"YYYY-MM-DD\")\n                            ? \"red\"\n                            : \"black\"\n                        }\n                      />\n                    ) : (\n                      //   <div>ALERT<div/>\n                      <></>\n                    );\n                  })}{\" \"}\n                </>\n              );\n            }\n            // console.log(\"Name: \", name, \"Qty: \", count);\n            // count = 0;\n          )}\n        </tbody>\n      </table>\n    );\n  }\n}\nexport default Inventory;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}