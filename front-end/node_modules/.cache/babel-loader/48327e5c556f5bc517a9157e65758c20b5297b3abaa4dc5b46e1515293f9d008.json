{"ast":null,"code":"var _jsxFileName = \"/Users/ayeshazafar/Desktop/Medical_Inventory-main/front-end/src/Pages/Inventory.jsx\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport InventoryCard from \"../Components/InventoryCard\";\nimport axios from \"axios\";\nimport Moment from \"react-moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar moment = require(\"moment\");\nclass Inventory extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: [],\n      inventory: [],\n      response: {}\n    };\n  }\n  async componentDidMount() {\n    const jwtToken = localStorage.getItem(\"token\");\n    if (!jwtToken) {\n      window.location.replace(\"/\");\n    }\n    const res = await axios.get(`${process.env.REACT_APP_URL}/getInventory`, {\n      headers: {\n        Authorization: `JWT ${jwtToken}`\n      }\n    });\n    this.setState({\n      data: res.data\n    });\n    let inventory_set = [...new Set(this.state.data.map(item => item.name))];\n    this.setState({\n      inventory: inventory_set\n    });\n  }\n  async componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.resource) {\n      const res = await axios.get(`${process.env.REACT_APP_URL}/getInventory`, {\n        headers: {\n          Authorization: `JWT ${jwtToken}`\n        }\n      });\n      setData(res.data);\n      this.setState({\n        users: response.data\n      });\n    }\n  }\n  //   const [data, setData] = useState([]);\n  //   const [inventory, setInventory] = useState([]);\n  //   const [response, setResponse] = useState({});\n\n  //   useEffect(() => {\n  //     const jwtToken = localStorage.getItem(\"token\");\n  //     if (!jwtToken) {\n  //       window.location.replace(\"/\");\n  //     }\n  //     const fetchData = async () => {\n  //       const res = await axios.get(`${process.env.REACT_APP_URL}/getInventory`, {\n  //         headers: { Authorization: `JWT ${jwtToken}` },\n  //       });\n  //       setData(res.data);\n  //     };\n\n  //     fetchData();\n  //     setInventory([... new Set(data.map((item)=>item.name))]);\n  //   }, []);\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-fixed\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Qty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Exp_date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [this.state.data.map(item => /*#__PURE__*/_jsxDEV(InventoryCard, {\n          name: item.name,\n          qty: item.quantity,\n          price: item.price_unit,\n          exp_date: moment(item.exp_date).format(\"YYYY-MM-DD\"),\n          color: moment(item.exp_date).format(\"YYYY-MM-DD\") < moment().format(\"YYYY-MM-DD\") ? \"red\" : \"black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)), console.log(\"name\", this.state.inventory)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Inventory;","map":{"version":3,"names":["React","Component","useState","useEffect","InventoryCard","axios","Moment","moment","require","Inventory","state","data","inventory","response","componentDidMount","jwtToken","localStorage","getItem","window","location","replace","res","get","process","env","REACT_APP_URL","headers","Authorization","setState","inventory_set","Set","map","item","name","componentDidUpdate","prevProps","props","resource","setData","users","render","quantity","price_unit","exp_date","format","console","log"],"sources":["/Users/ayeshazafar/Desktop/Medical_Inventory-main/front-end/src/Pages/Inventory.jsx"],"sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport InventoryCard from \"../Components/InventoryCard\";\nimport axios from \"axios\";\nimport Moment from \"react-moment\";\n\nvar moment = require(\"moment\");\n\nclass Inventory extends Component {\n  // const Inventory = () => {\n  state = {\n    data: [],\n    inventory: [],\n    response: {},\n  };\n  async componentDidMount() {\n    const jwtToken = localStorage.getItem(\"token\");\n    if (!jwtToken) {\n      window.location.replace(\"/\");\n    }\n    const res = await axios.get(`${process.env.REACT_APP_URL}/getInventory`, {\n        headers: { Authorization: `JWT ${jwtToken}` },\n      });\n    this.setState({ data: res.data });\n    let inventory_set = [... new Set(this.state.data.map((item)=>item.name))]\n    this.setState({ inventory: inventory_set });\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.resource) {\n      const res = await axios.get(`${process.env.REACT_APP_URL}/getInventory`, {\n        headers: { Authorization: `JWT ${jwtToken}` },\n      });\n      setData(res.data);\n\n      this.setState({ users: response.data });\n    }\n  }\n  //   const [data, setData] = useState([]);\n  //   const [inventory, setInventory] = useState([]);\n  //   const [response, setResponse] = useState({});\n\n  //   useEffect(() => {\n  //     const jwtToken = localStorage.getItem(\"token\");\n  //     if (!jwtToken) {\n  //       window.location.replace(\"/\");\n  //     }\n  //     const fetchData = async () => {\n  //       const res = await axios.get(`${process.env.REACT_APP_URL}/getInventory`, {\n  //         headers: { Authorization: `JWT ${jwtToken}` },\n  //       });\n  //       setData(res.data);\n  //     };\n\n  //     fetchData();\n  //     setInventory([... new Set(data.map((item)=>item.name))]);\n  //   }, []);\n\n  render() {\n    return (\n      <table className=\"table-fixed\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Qty</th>\n            <th>Price</th>\n            <th>Exp_date</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.state.data.map((item) => (\n            <InventoryCard\n              name={item.name}\n              qty={item.quantity}\n              price={item.price_unit}\n              exp_date={moment(item.exp_date).format(\"YYYY-MM-DD\")}\n              color={\n                moment(item.exp_date).format(\"YYYY-MM-DD\") <\n                moment().format(\"YYYY-MM-DD\")\n                  ? \"red\"\n                  : \"black\"\n              }\n            />\n          ))}\n          {console.log(\"name\", this.state.inventory)}\n        </tbody>\n      </table>\n    );\n\n  }\n}\nexport default Inventory;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}